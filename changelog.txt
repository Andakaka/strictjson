9 Feb 2024 (v2.2.2)
- Exposed the LLM variable so user can use any llm they want
- changed `strict_function` naming to `Function` to match convention of class names being capitalised (`strict_function` still works for legacy support.)
- added legacy support for `strict_text` and `strict_output`, which were the earlier function names of the current `strict_json`

8 Feb 2024 (v2.2.1)
- Added in LLM-based checks by using type: ensure <requirement> in output field
- Added in custom_checks and check_data in strict_json for user to implement their own custom check functions

5 Feb 2024 (v2.2.0)
- HUGE: Nested output formats of multiple lists and dictionaries are now supported!
- Now supports int, float, str, dict, list, Dict[], List[], Enum[] type forcing with LLM-based error correction
- Better handling of naming of variables in strict_function by using list of variables using variable_names
- Removed input_type and output_type from strict_function. Reason: input_type not needed as LLMs can flexibly perceive inputs, output_type is now handled with type forcing

8 Jan 2024 (v2.0.2)
- Installable by pip
- Support for OpenAI JSON Mode
- StrictJSON Functions